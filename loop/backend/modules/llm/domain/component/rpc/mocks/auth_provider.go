// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/llm/domain/component/rpc (interfaces: IAuthProvider)
//
// Generated by this command:
//
//	mockgen -destination=mocks/auth_provider.go -package=mocks . IAuthProvider
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIAuthProvider is a mock of IAuthProvider interface.
type MockIAuthProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthProviderMockRecorder
	isgomock struct{}
}

// MockIAuthProviderMockRecorder is the mock recorder for MockIAuthProvider.
type MockIAuthProviderMockRecorder struct {
	mock *MockIAuthProvider
}

// NewMockIAuthProvider creates a new mock instance.
func NewMockIAuthProvider(ctrl *gomock.Controller) *MockIAuthProvider {
	mock := &MockIAuthProvider{ctrl: ctrl}
	mock.recorder = &MockIAuthProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthProvider) EXPECT() *MockIAuthProviderMockRecorder {
	return m.recorder
}

// CheckSpacePermission mocks base method.
func (m *MockIAuthProvider) CheckSpacePermission(ctx context.Context, spaceID int64, action string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckSpacePermission", ctx, spaceID, action)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckSpacePermission indicates an expected call of CheckSpacePermission.
func (mr *MockIAuthProviderMockRecorder) CheckSpacePermission(ctx, spaceID, action any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckSpacePermission", reflect.TypeOf((*MockIAuthProvider)(nil).CheckSpacePermission), ctx, spaceID, action)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/foundation/domain/authn/repo (interfaces: IAuthNRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/coze-dev/coze-loop/backend/modules/foundation/domain/authn/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockIAuthNRepo is a mock of IAuthNRepo interface.
type MockIAuthNRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthNRepoMockRecorder
}

// MockIAuthNRepoMockRecorder is the mock recorder for MockIAuthNRepo.
type MockIAuthNRepoMockRecorder struct {
	mock *MockIAuthNRepo
}

// NewMockIAuthNRepo creates a new mock instance.
func NewMockIAuthNRepo(ctrl *gomock.Controller) *MockIAuthNRepo {
	mock := &MockIAuthNRepo{ctrl: ctrl}
	mock.recorder = &MockIAuthNRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthNRepo) EXPECT() *MockIAuthNRepoMockRecorder {
	return m.recorder
}

// CreateAPIKey mocks base method.
func (m *MockIAuthNRepo) CreateAPIKey(arg0 context.Context, arg1 *entity.APIKey) (int64, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateAPIKey indicates an expected call of CreateAPIKey.
func (mr *MockIAuthNRepoMockRecorder) CreateAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockIAuthNRepo)(nil).CreateAPIKey), arg0, arg1)
}

// DeleteAPIKey mocks base method.
func (m *MockIAuthNRepo) DeleteAPIKey(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAPIKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAPIKey indicates an expected call of DeleteAPIKey.
func (mr *MockIAuthNRepoMockRecorder) DeleteAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAPIKey", reflect.TypeOf((*MockIAuthNRepo)(nil).DeleteAPIKey), arg0, arg1)
}

// FlushAPIKeyUsedTime mocks base method.
func (m *MockIAuthNRepo) FlushAPIKeyUsedTime(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushAPIKeyUsedTime", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushAPIKeyUsedTime indicates an expected call of FlushAPIKeyUsedTime.
func (mr *MockIAuthNRepoMockRecorder) FlushAPIKeyUsedTime(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushAPIKeyUsedTime", reflect.TypeOf((*MockIAuthNRepo)(nil).FlushAPIKeyUsedTime), arg0, arg1)
}

// GetAPIKeyByIDs mocks base method.
func (m *MockIAuthNRepo) GetAPIKeyByIDs(arg0 context.Context, arg1 []int64) ([]*entity.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKeyByIDs", arg0, arg1)
	ret0, _ := ret[0].([]*entity.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKeyByIDs indicates an expected call of GetAPIKeyByIDs.
func (mr *MockIAuthNRepoMockRecorder) GetAPIKeyByIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKeyByIDs", reflect.TypeOf((*MockIAuthNRepo)(nil).GetAPIKeyByIDs), arg0, arg1)
}

// GetAPIKeyByKey mocks base method.
func (m *MockIAuthNRepo) GetAPIKeyByKey(arg0 context.Context, arg1 string) (*entity.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKeyByKey", arg0, arg1)
	ret0, _ := ret[0].(*entity.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKeyByKey indicates an expected call of GetAPIKeyByKey.
func (mr *MockIAuthNRepoMockRecorder) GetAPIKeyByKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKeyByKey", reflect.TypeOf((*MockIAuthNRepo)(nil).GetAPIKeyByKey), arg0, arg1)
}

// GetAPIKeyByUser mocks base method.
func (m *MockIAuthNRepo) GetAPIKeyByUser(arg0 context.Context, arg1 int64, arg2, arg3 int) ([]*entity.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKeyByUser", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*entity.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKeyByUser indicates an expected call of GetAPIKeyByUser.
func (mr *MockIAuthNRepoMockRecorder) GetAPIKeyByUser(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKeyByUser", reflect.TypeOf((*MockIAuthNRepo)(nil).GetAPIKeyByUser), arg0, arg1, arg2, arg3)
}

// UpdateAPIKeyName mocks base method.
func (m *MockIAuthNRepo) UpdateAPIKeyName(arg0 context.Context, arg1 int64, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAPIKeyName", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAPIKeyName indicates an expected call of UpdateAPIKeyName.
func (mr *MockIAuthNRepoMockRecorder) UpdateAPIKeyName(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAPIKeyName", reflect.TypeOf((*MockIAuthNRepo)(nil).UpdateAPIKeyName), arg0, arg1, arg2)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/authn (interfaces: AuthNService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/authn_service.go -package=mocks github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/authn AuthNService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	authn "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/authn"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthNService is a mock of AuthNService interface.
type MockAuthNService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthNServiceMockRecorder
	isgomock struct{}
}

// MockAuthNServiceMockRecorder is the mock recorder for MockAuthNService.
type MockAuthNServiceMockRecorder struct {
	mock *MockAuthNService
}

// NewMockAuthNService creates a new mock instance.
func NewMockAuthNService(ctrl *gomock.Controller) *MockAuthNService {
	mock := &MockAuthNService{ctrl: ctrl}
	mock.recorder = &MockAuthNServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthNService) EXPECT() *MockAuthNServiceMockRecorder {
	return m.recorder
}

// CreatePersonalAccessToken mocks base method.
func (m *MockAuthNService) CreatePersonalAccessToken(ctx context.Context, req *authn.CreatePersonalAccessTokenRequest) (*authn.CreatePersonalAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePersonalAccessToken", ctx, req)
	ret0, _ := ret[0].(*authn.CreatePersonalAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePersonalAccessToken indicates an expected call of CreatePersonalAccessToken.
func (mr *MockAuthNServiceMockRecorder) CreatePersonalAccessToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePersonalAccessToken", reflect.TypeOf((*MockAuthNService)(nil).CreatePersonalAccessToken), ctx, req)
}

// DeletePersonalAccessToken mocks base method.
func (m *MockAuthNService) DeletePersonalAccessToken(ctx context.Context, req *authn.DeletePersonalAccessTokenRequest) (*authn.DeletePersonalAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePersonalAccessToken", ctx, req)
	ret0, _ := ret[0].(*authn.DeletePersonalAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeletePersonalAccessToken indicates an expected call of DeletePersonalAccessToken.
func (mr *MockAuthNServiceMockRecorder) DeletePersonalAccessToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePersonalAccessToken", reflect.TypeOf((*MockAuthNService)(nil).DeletePersonalAccessToken), ctx, req)
}

// GetPersonalAccessToken mocks base method.
func (m *MockAuthNService) GetPersonalAccessToken(ctx context.Context, req *authn.GetPersonalAccessTokenRequest) (*authn.GetPersonalAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonalAccessToken", ctx, req)
	ret0, _ := ret[0].(*authn.GetPersonalAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersonalAccessToken indicates an expected call of GetPersonalAccessToken.
func (mr *MockAuthNServiceMockRecorder) GetPersonalAccessToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonalAccessToken", reflect.TypeOf((*MockAuthNService)(nil).GetPersonalAccessToken), ctx, req)
}

// ListPersonalAccessToken mocks base method.
func (m *MockAuthNService) ListPersonalAccessToken(ctx context.Context, req *authn.ListPersonalAccessTokenRequest) (*authn.ListPersonalAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPersonalAccessToken", ctx, req)
	ret0, _ := ret[0].(*authn.ListPersonalAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPersonalAccessToken indicates an expected call of ListPersonalAccessToken.
func (mr *MockAuthNServiceMockRecorder) ListPersonalAccessToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPersonalAccessToken", reflect.TypeOf((*MockAuthNService)(nil).ListPersonalAccessToken), ctx, req)
}

// UpdatePersonalAccessToken mocks base method.
func (m *MockAuthNService) UpdatePersonalAccessToken(ctx context.Context, req *authn.UpdatePersonalAccessTokenRequest) (*authn.UpdatePersonalAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePersonalAccessToken", ctx, req)
	ret0, _ := ret[0].(*authn.UpdatePersonalAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePersonalAccessToken indicates an expected call of UpdatePersonalAccessToken.
func (mr *MockAuthNServiceMockRecorder) UpdatePersonalAccessToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePersonalAccessToken", reflect.TypeOf((*MockAuthNService)(nil).UpdatePersonalAccessToken), ctx, req)
}

// VerifyToken mocks base method.
func (m *MockAuthNService) VerifyToken(ctx context.Context, req *authn.VerifyTokenRequest) (*authn.VerifyTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", ctx, req)
	ret0, _ := ret[0].(*authn.VerifyTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockAuthNServiceMockRecorder) VerifyToken(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockAuthNService)(nil).VerifyToken), ctx, req)
}

// Code generated by tool. DO NOT EDIT.
// app: cozeloop, biz: data

package errno

import (
	"github.com/coze-dev/coze-loop/backend/pkg/errorx/code"
)

const (
	CommonNoPermissionCode              = 601100101
	commonNoPermissionMessage           = "no access permission"
	commonNoPermissionNoAffectStability = true

	CommonBadRequestCode              = 601100201
	commonBadRequestMessage           = "bad request"
	commonBadRequestNoAffectStability = true

	CommonInvalidParamCode              = 601100202
	commonInvalidParamMessage           = "invalid param"
	commonInvalidParamNoAffectStability = true

	CommonBizInvalidCode              = 601100203
	commonBizInvalidMessage           = "biz operation is not allowed"
	commonBizInvalidNoAffectStability = true

	CommonResourceDuplicatedCode              = 601100204
	commonResourceDuplicatedMessage           = "resource duplicated"
	commonResourceDuplicatedNoAffectStability = true

	CommonNetworkTimeOutCode              = 601100701
	commonNetworkTimeOutMessage           = "network timeout"
	commonNetworkTimeOutNoAffectStability = false

	CommonInternalErrorCode              = 601100702
	commonInternalErrorMessage           = "internal error"
	commonInternalErrorNoAffectStability = false

	CommonRPCErrorCode              = 601100703
	commonRPCErrorMessage           = "rpc error"
	commonRPCErrorNoAffectStability = false

	CommonMySqlErrorCode              = 601100801
	commonMySqlErrorMessage           = "mysql error"
	commonMySqlErrorNoAffectStability = false

	CommonRedisErrorCode              = 601100803
	commonRedisErrorMessage           = "redis error"
	commonRedisErrorNoAffectStability = false

	ResourceNotFoundCode              = 601103001 // 资源不存在
	resourceNotFoundMessage           = "resource not found"
	resourceNotFoundNoAffectStability = true

	UnauthorizedCode              = 601103002 // not authorized
	unauthorizedMessage           = "unauthorized"
	unauthorizedNoAffectStability = true

	JSONErrorCode              = 601103003 // JSON 编解码错误
	jSONErrorMessage           = "json.(un)marshal failed"
	jSONErrorNoAffectStability = true

	ImageXErrorCode              = 601103004 // imagex 错误
	imageXErrorMessage           = "imagex error"
	imageXErrorNoAffectStability = false

	ContentAuditFailedCode              = 601103005 // 未通过内容审核，请检查请求中是否包含违规内容
	contentAuditFailedMessage           = "content audit failed, please check your request whether the request contains any illegal content"
	contentAuditFailedNoAffectStability = true

	OpenAPIRateLimitExceedCode              = 601103006 // 请求频率过高，被限流
	openAPIRateLimitExceedMessage           = "request rate exceeds limit, please slow down"
	openAPIRateLimitExceedNoAffectStability = true

	DatasetLockedCode              = 601104000 // 数据集被锁定, 无法编辑
	datasetLockedMessage           = "Dataset is locked by running tasks. No edits allowed."
	datasetLockedNoAffectStability = true

	FileNotFoundCode              = 601104001 // 文件不存在
	fileNotFoundMessage           = "The source file to import is not found."
	fileNotFoundNoAffectStability = true

	MalformedFileCode              = 601104002 // 文件格式不正确
	malformedFileMessage           = "Invalid file format."
	malformedFileNoAffectStability = true

	InvalidDatasetCode              = 601104003 // 无效的数据集
	invalidDatasetMessage           = "Invalid dataset. Maybe the dataset not exists."
	invalidDatasetNoAffectStability = true

	AIAnnotateTaskColumnExistsCode              = 601104004 // 所选择的列已被其他AI标注任务使用
	aIAnnotateTaskColumnExistsMessage           = "Specified column is already been used by another ai annotate task"
	aIAnnotateTaskColumnExistsNoAffectStability = true

	AIAnnotateTaskRunStatusUpdatedCode              = 601104005 // 任务状态已更新，请刷新页面
	aIAnnotateTaskRunStatusUpdatedMessage           = "Task status has been updated. Please refresh the page."
	aIAnnotateTaskRunStatusUpdatedNoAffectStability = true

	DatasetNotEditableCode              = 601104006 // 数据集无法编辑，可能被锁定中
	datasetNotEditableMessage           = "dataset is not editable"
	datasetNotEditableNoAffectStability = true

	DatasetSchemaInvalidCode              = 601104500 // 数据集列定义不合法
	datasetSchemaInvalidMessage           = "dataset schema is invalid"
	datasetSchemaInvalidNoAffectStability = false

	DatasetCapacityFullCode              = 601104501 // 数据集容量已满
	datasetCapacityFullMessage           = "dataset capacity is full"
	datasetCapacityFullNoAffectStability = true

	ImcompatibleDatasetSchemaCode              = 601104502 // 数据集列定义不兼容
	imcompatibleDatasetSchemaMessage           = "dataset schema is imcompatible"
	imcompatibleDatasetSchemaNoAffectStability = false

	ConcurrentDatasetOperationsCode              = 601104503 // 数据集并发操作冲突，请稍微重试
	concurrentDatasetOperationsMessage           = "concurrent dataset operations"
	concurrentDatasetOperationsNoAffectStability = true

	DatasetNameDuplicatedCode              = 601104504 // 当前空间下已存在相同的数据集名称，请更换其他名称
	datasetNameDuplicatedMessage           = "dataset name is duplicated in this space"
	datasetNameDuplicatedNoAffectStability = true

	OrderByFieldInvalidCode              = 601104505 // 指定的排序字段不合法
	orderByFieldInvalidMessage           = "order by field is invalid"
	orderByFieldInvalidNoAffectStability = true

	SchemaMismatchCode              = 601104506 // 数据项列配置与当前数据集不匹配
	schemaMismatchMessage           = "item data schema mismatch"
	schemaMismatchNoAffectStability = true

	ItemDataSizeExceededCode              = 601104507 // 数据行大小超过限制
	itemDataSizeExceededMessage           = "item data size exceeded"
	itemDataSizeExceededNoAffectStability = true

	TooManyItemsCode              = 601104508 // 数据项数量超过限制
	tooManyItemsMessage           = "too many items"
	tooManyItemsNoAffectStability = true

	CozeModelNotExistCode              = 601105001 // Coze模型不存在
	cozeModelNotExistMessage           = "coze model not exist"
	cozeModelNotExistNoAffectStability = false

	InterfaceNotAvailableInHouseCode              = 601105002 // 当前接口不支持Coze罗盘内场
	interfaceNotAvailableInHouseMessage           = "the interface is not available in house"
	interfaceNotAvailableInHouseNoAffectStability = false

	GetCozeModelListFailedCode              = 601105003 // 请求Coze模型列表接口失败
	getCozeModelListFailedMessage           = "get coze model list failed"
	getCozeModelListFailedNoAffectStability = false

	GetCozeModelFailedCode              = 601105004 // 请求Coze模型详情接口失败
	getCozeModelFailedMessage           = "get coze model failed"
	getCozeModelFailedNoAffectStability = false

	GetCozeModelListParamFailedCode              = 601105005 // 请求Coze模型列表参数接口失败
	getCozeModelListParamFailedMessage           = "get coze model list param failed"
	getCozeModelListParamFailedNoAffectStability = false

	GetCozeModelUsageFailedCode              = 601105006 // 请求Coze模型用量接口失败
	getCozeModelUsageFailedMessage           = "get coze model usage failed"
	getCozeModelUsageFailedNoAffectStability = false

	GetLLMGatewayModelConfigFailedCode              = 601105007 // 获取LLM Gateway模型配置失败
	getLLMGatewayModelConfigFailedMessage           = "get llm gateway model config failed"
	getLLMGatewayModelConfigFailedNoAffectStability = false
)

func init() {

	code.Register(
		CommonNoPermissionCode,
		commonNoPermissionMessage,
		code.WithAffectStability(!commonNoPermissionNoAffectStability),
	)

	code.Register(
		CommonBadRequestCode,
		commonBadRequestMessage,
		code.WithAffectStability(!commonBadRequestNoAffectStability),
	)

	code.Register(
		CommonInvalidParamCode,
		commonInvalidParamMessage,
		code.WithAffectStability(!commonInvalidParamNoAffectStability),
	)

	code.Register(
		CommonBizInvalidCode,
		commonBizInvalidMessage,
		code.WithAffectStability(!commonBizInvalidNoAffectStability),
	)

	code.Register(
		CommonResourceDuplicatedCode,
		commonResourceDuplicatedMessage,
		code.WithAffectStability(!commonResourceDuplicatedNoAffectStability),
	)

	code.Register(
		CommonNetworkTimeOutCode,
		commonNetworkTimeOutMessage,
		code.WithAffectStability(!commonNetworkTimeOutNoAffectStability),
	)

	code.Register(
		CommonInternalErrorCode,
		commonInternalErrorMessage,
		code.WithAffectStability(!commonInternalErrorNoAffectStability),
	)

	code.Register(
		CommonRPCErrorCode,
		commonRPCErrorMessage,
		code.WithAffectStability(!commonRPCErrorNoAffectStability),
	)

	code.Register(
		CommonMySqlErrorCode,
		commonMySqlErrorMessage,
		code.WithAffectStability(!commonMySqlErrorNoAffectStability),
	)

	code.Register(
		CommonRedisErrorCode,
		commonRedisErrorMessage,
		code.WithAffectStability(!commonRedisErrorNoAffectStability),
	)

	code.Register(
		ResourceNotFoundCode,
		resourceNotFoundMessage,
		code.WithAffectStability(!resourceNotFoundNoAffectStability),
	)

	code.Register(
		UnauthorizedCode,
		unauthorizedMessage,
		code.WithAffectStability(!unauthorizedNoAffectStability),
	)

	code.Register(
		JSONErrorCode,
		jSONErrorMessage,
		code.WithAffectStability(!jSONErrorNoAffectStability),
	)

	code.Register(
		ImageXErrorCode,
		imageXErrorMessage,
		code.WithAffectStability(!imageXErrorNoAffectStability),
	)

	code.Register(
		ContentAuditFailedCode,
		contentAuditFailedMessage,
		code.WithAffectStability(!contentAuditFailedNoAffectStability),
	)

	code.Register(
		OpenAPIRateLimitExceedCode,
		openAPIRateLimitExceedMessage,
		code.WithAffectStability(!openAPIRateLimitExceedNoAffectStability),
	)

	code.Register(
		DatasetLockedCode,
		datasetLockedMessage,
		code.WithAffectStability(!datasetLockedNoAffectStability),
	)

	code.Register(
		FileNotFoundCode,
		fileNotFoundMessage,
		code.WithAffectStability(!fileNotFoundNoAffectStability),
	)

	code.Register(
		MalformedFileCode,
		malformedFileMessage,
		code.WithAffectStability(!malformedFileNoAffectStability),
	)

	code.Register(
		InvalidDatasetCode,
		invalidDatasetMessage,
		code.WithAffectStability(!invalidDatasetNoAffectStability),
	)

	code.Register(
		AIAnnotateTaskColumnExistsCode,
		aIAnnotateTaskColumnExistsMessage,
		code.WithAffectStability(!aIAnnotateTaskColumnExistsNoAffectStability),
	)

	code.Register(
		AIAnnotateTaskRunStatusUpdatedCode,
		aIAnnotateTaskRunStatusUpdatedMessage,
		code.WithAffectStability(!aIAnnotateTaskRunStatusUpdatedNoAffectStability),
	)

	code.Register(
		DatasetNotEditableCode,
		datasetNotEditableMessage,
		code.WithAffectStability(!datasetNotEditableNoAffectStability),
	)

	code.Register(
		DatasetSchemaInvalidCode,
		datasetSchemaInvalidMessage,
		code.WithAffectStability(!datasetSchemaInvalidNoAffectStability),
	)

	code.Register(
		DatasetCapacityFullCode,
		datasetCapacityFullMessage,
		code.WithAffectStability(!datasetCapacityFullNoAffectStability),
	)

	code.Register(
		ImcompatibleDatasetSchemaCode,
		imcompatibleDatasetSchemaMessage,
		code.WithAffectStability(!imcompatibleDatasetSchemaNoAffectStability),
	)

	code.Register(
		ConcurrentDatasetOperationsCode,
		concurrentDatasetOperationsMessage,
		code.WithAffectStability(!concurrentDatasetOperationsNoAffectStability),
	)

	code.Register(
		DatasetNameDuplicatedCode,
		datasetNameDuplicatedMessage,
		code.WithAffectStability(!datasetNameDuplicatedNoAffectStability),
	)

	code.Register(
		OrderByFieldInvalidCode,
		orderByFieldInvalidMessage,
		code.WithAffectStability(!orderByFieldInvalidNoAffectStability),
	)

	code.Register(
		SchemaMismatchCode,
		schemaMismatchMessage,
		code.WithAffectStability(!schemaMismatchNoAffectStability),
	)

	code.Register(
		ItemDataSizeExceededCode,
		itemDataSizeExceededMessage,
		code.WithAffectStability(!itemDataSizeExceededNoAffectStability),
	)

	code.Register(
		TooManyItemsCode,
		tooManyItemsMessage,
		code.WithAffectStability(!tooManyItemsNoAffectStability),
	)

	code.Register(
		CozeModelNotExistCode,
		cozeModelNotExistMessage,
		code.WithAffectStability(!cozeModelNotExistNoAffectStability),
	)

	code.Register(
		InterfaceNotAvailableInHouseCode,
		interfaceNotAvailableInHouseMessage,
		code.WithAffectStability(!interfaceNotAvailableInHouseNoAffectStability),
	)

	code.Register(
		GetCozeModelListFailedCode,
		getCozeModelListFailedMessage,
		code.WithAffectStability(!getCozeModelListFailedNoAffectStability),
	)

	code.Register(
		GetCozeModelFailedCode,
		getCozeModelFailedMessage,
		code.WithAffectStability(!getCozeModelFailedNoAffectStability),
	)

	code.Register(
		GetCozeModelListParamFailedCode,
		getCozeModelListParamFailedMessage,
		code.WithAffectStability(!getCozeModelListParamFailedNoAffectStability),
	)

	code.Register(
		GetCozeModelUsageFailedCode,
		getCozeModelUsageFailedMessage,
		code.WithAffectStability(!getCozeModelUsageFailedNoAffectStability),
	)

	code.Register(
		GetLLMGatewayModelConfigFailedCode,
		getLLMGatewayModelConfigFailedMessage,
		code.WithAffectStability(!getLLMGatewayModelConfigFailedNoAffectStability),
	)

}

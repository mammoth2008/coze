// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/data/domain/component/vfs (interfaces: IUnionFS)
//
// Generated by this command:
//
//	mockgen -destination=mocks/union.go -package=mocks . IUnionFS
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	fs "io/fs"
	reflect "reflect"

	vfs "github.com/coze-dev/coze-loop/backend/modules/data/domain/component/vfs"
	entity "github.com/coze-dev/coze-loop/backend/modules/data/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockIUnionFS is a mock of IUnionFS interface.
type MockIUnionFS struct {
	ctrl     *gomock.Controller
	recorder *MockIUnionFSMockRecorder
	isgomock struct{}
}

// MockIUnionFSMockRecorder is the mock recorder for MockIUnionFS.
type MockIUnionFSMockRecorder struct {
	mock *MockIUnionFS
}

// NewMockIUnionFS creates a new mock instance.
func NewMockIUnionFS(ctrl *gomock.Controller) *MockIUnionFS {
	mock := &MockIUnionFS{ctrl: ctrl}
	mock.recorder = &MockIUnionFSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUnionFS) EXPECT() *MockIUnionFSMockRecorder {
	return m.recorder
}

// GetROFileSystem mocks base method.
func (m *MockIUnionFS) GetROFileSystem(provider entity.Provider) (vfs.ROFileSystem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetROFileSystem", provider)
	ret0, _ := ret[0].(vfs.ROFileSystem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetROFileSystem indicates an expected call of GetROFileSystem.
func (mr *MockIUnionFSMockRecorder) GetROFileSystem(provider any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetROFileSystem", reflect.TypeOf((*MockIUnionFS)(nil).GetROFileSystem), provider)
}

// StatFile mocks base method.
func (m *MockIUnionFS) StatFile(ctx context.Context, provider entity.Provider, path string) (fs.FileInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StatFile", ctx, provider, path)
	ret0, _ := ret[0].(fs.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StatFile indicates an expected call of StatFile.
func (mr *MockIUnionFSMockRecorder) StatFile(ctx, provider, path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StatFile", reflect.TypeOf((*MockIUnionFS)(nil).StatFile), ctx, provider, path)
}

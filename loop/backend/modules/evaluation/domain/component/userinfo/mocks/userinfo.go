// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/component/userinfo (interfaces: UserInfoService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/userinfo.go -package=mocks . UserInfoService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserInfoService is a mock of UserInfoService interface.
type MockUserInfoService struct {
	ctrl     *gomock.Controller
	recorder *MockUserInfoServiceMockRecorder
	isgomock struct{}
}

// MockUserInfoServiceMockRecorder is the mock recorder for MockUserInfoService.
type MockUserInfoServiceMockRecorder struct {
	mock *MockUserInfoService
}

// NewMockUserInfoService creates a new mock instance.
func NewMockUserInfoService(ctrl *gomock.Controller) *MockUserInfoService {
	mock := &MockUserInfoService{ctrl: ctrl}
	mock.recorder = &MockUserInfoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInfoService) EXPECT() *MockUserInfoServiceMockRecorder {
	return m.recorder
}

// PackUserInfo mocks base method.
func (m *MockUserInfoService) PackUserInfo(ctx context.Context, userInfoCarrier any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PackUserInfo", ctx, userInfoCarrier)
}

// PackUserInfo indicates an expected call of PackUserInfo.
func (mr *MockUserInfoServiceMockRecorder) PackUserInfo(ctx, userInfoCarrier any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PackUserInfo", reflect.TypeOf((*MockUserInfoService)(nil).PackUserInfo), ctx, userInfoCarrier)
}

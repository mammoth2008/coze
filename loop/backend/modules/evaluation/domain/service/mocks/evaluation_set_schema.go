// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/service (interfaces: EvaluationSetSchemaService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/evaluation_set_schema.go -package=mocks . EvaluationSetSchemaService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockEvaluationSetSchemaService is a mock of EvaluationSetSchemaService interface.
type MockEvaluationSetSchemaService struct {
	ctrl     *gomock.Controller
	recorder *MockEvaluationSetSchemaServiceMockRecorder
	isgomock struct{}
}

// MockEvaluationSetSchemaServiceMockRecorder is the mock recorder for MockEvaluationSetSchemaService.
type MockEvaluationSetSchemaServiceMockRecorder struct {
	mock *MockEvaluationSetSchemaService
}

// NewMockEvaluationSetSchemaService creates a new mock instance.
func NewMockEvaluationSetSchemaService(ctrl *gomock.Controller) *MockEvaluationSetSchemaService {
	mock := &MockEvaluationSetSchemaService{ctrl: ctrl}
	mock.recorder = &MockEvaluationSetSchemaServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEvaluationSetSchemaService) EXPECT() *MockEvaluationSetSchemaServiceMockRecorder {
	return m.recorder
}

// UpdateEvaluationSetSchema mocks base method.
func (m *MockEvaluationSetSchemaService) UpdateEvaluationSetSchema(ctx context.Context, spaceID, evaluationSetID int64, fieldSchema []*entity.FieldSchema) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEvaluationSetSchema", ctx, spaceID, evaluationSetID, fieldSchema)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEvaluationSetSchema indicates an expected call of UpdateEvaluationSetSchema.
func (mr *MockEvaluationSetSchemaServiceMockRecorder) UpdateEvaluationSetSchema(ctx, spaceID, evaluationSetID, fieldSchema any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEvaluationSetSchema", reflect.TypeOf((*MockEvaluationSetSchemaService)(nil).UpdateEvaluationSetSchema), ctx, spaceID, evaluationSetID, fieldSchema)
}

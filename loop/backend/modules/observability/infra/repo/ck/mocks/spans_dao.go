// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/observability/infra/repo/ck (interfaces: ISpansDao)
//
// Generated by this command:
//
//	mockgen -destination=mocks/spans_dao.go -package=mocks . ISpansDao
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ck "github.com/coze-dev/coze-loop/backend/modules/observability/infra/repo/ck"
	model "github.com/coze-dev/coze-loop/backend/modules/observability/infra/repo/ck/gorm_gen/model"
	gomock "go.uber.org/mock/gomock"
)

// MockISpansDao is a mock of ISpansDao interface.
type MockISpansDao struct {
	ctrl     *gomock.Controller
	recorder *MockISpansDaoMockRecorder
	isgomock struct{}
}

// MockISpansDaoMockRecorder is the mock recorder for MockISpansDao.
type MockISpansDaoMockRecorder struct {
	mock *MockISpansDao
}

// NewMockISpansDao creates a new mock instance.
func NewMockISpansDao(ctrl *gomock.Controller) *MockISpansDao {
	mock := &MockISpansDao{ctrl: ctrl}
	mock.recorder = &MockISpansDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISpansDao) EXPECT() *MockISpansDaoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockISpansDao) Get(arg0 context.Context, arg1 *ck.QueryParam) ([]*model.ObservabilitySpan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].([]*model.ObservabilitySpan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockISpansDaoMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockISpansDao)(nil).Get), arg0, arg1)
}

// Insert mocks base method.
func (m *MockISpansDao) Insert(arg0 context.Context, arg1 *ck.InsertParam) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockISpansDaoMockRecorder) Insert(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockISpansDao)(nil).Insert), arg0, arg1)
}

// Copyright (c) 2025 coze-dev Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by hertz generator.

package apis

import (
	"context"
	"io"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/hertz-contrib/sse"

	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/debug"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/debug/promptdebugservice"
)

var promptDebugSvc promptdebugservice.Client

// DebugStreaming .
// @router /api/prompt/v1/prompts/:prompt_id/debug_streaming [POST]
func DebugStreaming(ctx context.Context, c *app.RequestContext) {
	var err error
	var req debug.DebugStreamingRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	c.SetStatusCode(http.StatusOK)
	s := sse.NewStream(c)
	stream, err := promptDebugSvc.DebugStreaming(ctx, &req)
	if err != nil {
		publishErrEvent(ctx, s, err)
		return
	}
	if stream != nil {
		for {
			resp, err := stream.Recv(ctx)
			if err == io.EOF {
				return
			}
			if err != nil {
				publishErrEvent(ctx, s, err)
				return
			}
			err = publishDataEvent(ctx, s, resp)
			if err != nil {
				publishErrEvent(ctx, s, err)
				return
			}
		}
	}
}

// SaveDebugContext .
// @router /api/prompt/v1/prompts/:prompt_id/debug_context/save [POST]
func SaveDebugContext(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, promptDebugSvc.SaveDebugContext)
}

// GetDebugContext .
// @router /api/prompt/v1/prompts/:prompt_id/debug_context/get [GET]
func GetDebugContext(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, promptDebugSvc.GetDebugContext)
}

// ListDebugHistory .
// @router /api/prompt/v1/prompts/:prompt_id/debug_history/list [GET]
func ListDebugHistory(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, promptDebugSvc.ListDebugHistory)
}

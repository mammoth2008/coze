// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package observability

import (
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/observability/trace"
)

type ObservabilityTraceService interface {
	trace.TraceService
}

type ObservabilityTraceServiceClient struct {
	*trace.TraceServiceClient
}

func NewObservabilityTraceServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *ObservabilityTraceServiceClient {
	return &ObservabilityTraceServiceClient{
		TraceServiceClient: trace.NewTraceServiceClientFactory(t, f),
	}
}

func NewObservabilityTraceServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *ObservabilityTraceServiceClient {
	return &ObservabilityTraceServiceClient{
		TraceServiceClient: trace.NewTraceServiceClientProtocol(t, iprot, oprot),
	}
}

func NewObservabilityTraceServiceClient(c thrift.TClient) *ObservabilityTraceServiceClient {
	return &ObservabilityTraceServiceClient{
		TraceServiceClient: trace.NewTraceServiceClient(c),
	}
}

type ObservabilityTraceServiceProcessor struct {
	*trace.TraceServiceProcessor
}

func NewObservabilityTraceServiceProcessor(handler ObservabilityTraceService) *ObservabilityTraceServiceProcessor {
	self := &ObservabilityTraceServiceProcessor{trace.NewTraceServiceProcessor(handler)}
	return self
}

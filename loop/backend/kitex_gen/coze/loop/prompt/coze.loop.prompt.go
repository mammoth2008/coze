// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package prompt

import (
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/debug"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/execute"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/manage"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/openapi"
)

type PromptManageService interface {
	manage.PromptManageService
}

type PromptManageServiceClient struct {
	*manage.PromptManageServiceClient
}

func NewPromptManageServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *PromptManageServiceClient {
	return &PromptManageServiceClient{
		PromptManageServiceClient: manage.NewPromptManageServiceClientFactory(t, f),
	}
}

func NewPromptManageServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *PromptManageServiceClient {
	return &PromptManageServiceClient{
		PromptManageServiceClient: manage.NewPromptManageServiceClientProtocol(t, iprot, oprot),
	}
}

func NewPromptManageServiceClient(c thrift.TClient) *PromptManageServiceClient {
	return &PromptManageServiceClient{
		PromptManageServiceClient: manage.NewPromptManageServiceClient(c),
	}
}

type PromptDebugService interface {
	debug.PromptDebugService
}

type PromptDebugServiceClient struct {
	*debug.PromptDebugServiceClient
}

func NewPromptDebugServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *PromptDebugServiceClient {
	return &PromptDebugServiceClient{
		PromptDebugServiceClient: debug.NewPromptDebugServiceClientFactory(t, f),
	}
}

func NewPromptDebugServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *PromptDebugServiceClient {
	return &PromptDebugServiceClient{
		PromptDebugServiceClient: debug.NewPromptDebugServiceClientProtocol(t, iprot, oprot),
	}
}

func NewPromptDebugServiceClient(c thrift.TClient) *PromptDebugServiceClient {
	return &PromptDebugServiceClient{
		PromptDebugServiceClient: debug.NewPromptDebugServiceClient(c),
	}
}

type PromptExecuteService interface {
	execute.PromptExecuteService
}

type PromptExecuteServiceClient struct {
	*execute.PromptExecuteServiceClient
}

func NewPromptExecuteServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *PromptExecuteServiceClient {
	return &PromptExecuteServiceClient{
		PromptExecuteServiceClient: execute.NewPromptExecuteServiceClientFactory(t, f),
	}
}

func NewPromptExecuteServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *PromptExecuteServiceClient {
	return &PromptExecuteServiceClient{
		PromptExecuteServiceClient: execute.NewPromptExecuteServiceClientProtocol(t, iprot, oprot),
	}
}

func NewPromptExecuteServiceClient(c thrift.TClient) *PromptExecuteServiceClient {
	return &PromptExecuteServiceClient{
		PromptExecuteServiceClient: execute.NewPromptExecuteServiceClient(c),
	}
}

type PromptOpenAPIService interface {
	openapi.PromptOpenAPIService
}

type PromptOpenAPIServiceClient struct {
	*openapi.PromptOpenAPIServiceClient
}

func NewPromptOpenAPIServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *PromptOpenAPIServiceClient {
	return &PromptOpenAPIServiceClient{
		PromptOpenAPIServiceClient: openapi.NewPromptOpenAPIServiceClientFactory(t, f),
	}
}

func NewPromptOpenAPIServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *PromptOpenAPIServiceClient {
	return &PromptOpenAPIServiceClient{
		PromptOpenAPIServiceClient: openapi.NewPromptOpenAPIServiceClientProtocol(t, iprot, oprot),
	}
}

func NewPromptOpenAPIServiceClient(c thrift.TClient) *PromptOpenAPIServiceClient {
	return &PromptOpenAPIServiceClient{
		PromptOpenAPIServiceClient: openapi.NewPromptOpenAPIServiceClient(c),
	}
}

type PromptManageServiceProcessor struct {
	*manage.PromptManageServiceProcessor
}

func NewPromptManageServiceProcessor(handler PromptManageService) *PromptManageServiceProcessor {
	self := &PromptManageServiceProcessor{manage.NewPromptManageServiceProcessor(handler)}
	return self
}

type PromptDebugServiceProcessor struct {
	*debug.PromptDebugServiceProcessor
}

func NewPromptDebugServiceProcessor(handler PromptDebugService) *PromptDebugServiceProcessor {
	self := &PromptDebugServiceProcessor{debug.NewPromptDebugServiceProcessor(handler)}
	return self
}

type PromptExecuteServiceProcessor struct {
	*execute.PromptExecuteServiceProcessor
}

func NewPromptExecuteServiceProcessor(handler PromptExecuteService) *PromptExecuteServiceProcessor {
	self := &PromptExecuteServiceProcessor{execute.NewPromptExecuteServiceProcessor(handler)}
	return self
}

type PromptOpenAPIServiceProcessor struct {
	*openapi.PromptOpenAPIServiceProcessor
}

func NewPromptOpenAPIServiceProcessor(handler PromptOpenAPIService) *PromptOpenAPIServiceProcessor {
	self := &PromptOpenAPIServiceProcessor{openapi.NewPromptOpenAPIServiceProcessor(handler)}
	return self
}

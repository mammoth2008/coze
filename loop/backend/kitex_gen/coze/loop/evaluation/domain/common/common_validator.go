// Code generated by Validator v0.2.6. DO NOT EDIT.

package common

import (
	"bytes"
	"fmt"
	"reflect"
	"regexp"
	"strings"
	"time"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = (*regexp.Regexp)(nil)
	_ = time.Nanosecond
)

func (p *Content) IsValid() error {
	if p.Image != nil {
		if err := p.Image.IsValid(); err != nil {
			return fmt.Errorf("field Image not valid, %w", err)
		}
	}
	if p.Audio != nil {
		if err := p.Audio.IsValid(); err != nil {
			return fmt.Errorf("field Audio not valid, %w", err)
		}
	}
	return nil
}
func (p *AudioContent) IsValid() error {
	return nil
}
func (p *Audio) IsValid() error {
	return nil
}
func (p *Image) IsValid() error {
	return nil
}
func (p *OrderBy) IsValid() error {
	return nil
}
func (p *Message) IsValid() error {
	if p.Content != nil {
		if err := p.Content.IsValid(); err != nil {
			return fmt.Errorf("field Content not valid, %w", err)
		}
	}
	return nil
}
func (p *ArgsSchema) IsValid() error {
	return nil
}
func (p *UserInfo) IsValid() error {
	return nil
}
func (p *BaseInfo) IsValid() error {
	if p.CreatedBy != nil {
		if err := p.CreatedBy.IsValid(); err != nil {
			return fmt.Errorf("field CreatedBy not valid, %w", err)
		}
	}
	if p.UpdatedBy != nil {
		if err := p.UpdatedBy.IsValid(); err != nil {
			return fmt.Errorf("field UpdatedBy not valid, %w", err)
		}
	}
	return nil
}
func (p *ModelConfig) IsValid() error {
	return nil
}
func (p *Session) IsValid() error {
	return nil
}

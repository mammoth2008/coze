// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package evaluation

import (
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/eval_set"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/eval_target"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/evaluator"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/expt"
)

type EvaluationSetService interface {
	eval_set.EvaluationSetService
}

type EvaluationSetServiceClient struct {
	*eval_set.EvaluationSetServiceClient
}

func NewEvaluationSetServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *EvaluationSetServiceClient {
	return &EvaluationSetServiceClient{
		EvaluationSetServiceClient: eval_set.NewEvaluationSetServiceClientFactory(t, f),
	}
}

func NewEvaluationSetServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *EvaluationSetServiceClient {
	return &EvaluationSetServiceClient{
		EvaluationSetServiceClient: eval_set.NewEvaluationSetServiceClientProtocol(t, iprot, oprot),
	}
}

func NewEvaluationSetServiceClient(c thrift.TClient) *EvaluationSetServiceClient {
	return &EvaluationSetServiceClient{
		EvaluationSetServiceClient: eval_set.NewEvaluationSetServiceClient(c),
	}
}

type EvaluatorService interface {
	evaluator.EvaluatorService
}

type EvaluatorServiceClient struct {
	*evaluator.EvaluatorServiceClient
}

func NewEvaluatorServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *EvaluatorServiceClient {
	return &EvaluatorServiceClient{
		EvaluatorServiceClient: evaluator.NewEvaluatorServiceClientFactory(t, f),
	}
}

func NewEvaluatorServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *EvaluatorServiceClient {
	return &EvaluatorServiceClient{
		EvaluatorServiceClient: evaluator.NewEvaluatorServiceClientProtocol(t, iprot, oprot),
	}
}

func NewEvaluatorServiceClient(c thrift.TClient) *EvaluatorServiceClient {
	return &EvaluatorServiceClient{
		EvaluatorServiceClient: evaluator.NewEvaluatorServiceClient(c),
	}
}

type ExperimentService interface {
	expt.ExperimentService
}

type ExperimentServiceClient struct {
	*expt.ExperimentServiceClient
}

func NewExperimentServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *ExperimentServiceClient {
	return &ExperimentServiceClient{
		ExperimentServiceClient: expt.NewExperimentServiceClientFactory(t, f),
	}
}

func NewExperimentServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *ExperimentServiceClient {
	return &ExperimentServiceClient{
		ExperimentServiceClient: expt.NewExperimentServiceClientProtocol(t, iprot, oprot),
	}
}

func NewExperimentServiceClient(c thrift.TClient) *ExperimentServiceClient {
	return &ExperimentServiceClient{
		ExperimentServiceClient: expt.NewExperimentServiceClient(c),
	}
}

type EvalTargetService interface {
	eval_target.EvalTargetService
}

type EvalTargetServiceClient struct {
	*eval_target.EvalTargetServiceClient
}

func NewEvalTargetServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *EvalTargetServiceClient {
	return &EvalTargetServiceClient{
		EvalTargetServiceClient: eval_target.NewEvalTargetServiceClientFactory(t, f),
	}
}

func NewEvalTargetServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *EvalTargetServiceClient {
	return &EvalTargetServiceClient{
		EvalTargetServiceClient: eval_target.NewEvalTargetServiceClientProtocol(t, iprot, oprot),
	}
}

func NewEvalTargetServiceClient(c thrift.TClient) *EvalTargetServiceClient {
	return &EvalTargetServiceClient{
		EvalTargetServiceClient: eval_target.NewEvalTargetServiceClient(c),
	}
}

type EvaluationSetServiceProcessor struct {
	*eval_set.EvaluationSetServiceProcessor
}

func NewEvaluationSetServiceProcessor(handler EvaluationSetService) *EvaluationSetServiceProcessor {
	self := &EvaluationSetServiceProcessor{eval_set.NewEvaluationSetServiceProcessor(handler)}
	return self
}

type EvaluatorServiceProcessor struct {
	*evaluator.EvaluatorServiceProcessor
}

func NewEvaluatorServiceProcessor(handler EvaluatorService) *EvaluatorServiceProcessor {
	self := &EvaluatorServiceProcessor{evaluator.NewEvaluatorServiceProcessor(handler)}
	return self
}

type ExperimentServiceProcessor struct {
	*expt.ExperimentServiceProcessor
}

func NewExperimentServiceProcessor(handler ExperimentService) *ExperimentServiceProcessor {
	self := &ExperimentServiceProcessor{expt.NewExperimentServiceProcessor(handler)}
	return self
}

type EvalTargetServiceProcessor struct {
	*eval_target.EvalTargetServiceProcessor
}

func NewEvalTargetServiceProcessor(handler EvalTargetService) *EvalTargetServiceProcessor {
	self := &EvalTargetServiceProcessor{eval_target.NewEvalTargetServiceProcessor(handler)}
	return self
}
